;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-xinshoubangzhu" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M924.356582 30.116925 188.048887 30.116925c-77.321016 0-117.774357 40.453341-117.774357 117.774357l0 709.634196 1.433652-10.786671c-0.938372 6.559393-1.433652 13.260002-1.433652 20.079314 0 77.622892 49.442062 127.064954 127.064954 127.064954l716.228381 0c22.178115 0 40.156582-17.978467 40.156582-40.157605L953.724447 844.040349 953.724447 701.997262 953.724447 59.486836c0.001023-11.391445-17.977443-29.369911-40.155559-29.369911L924.356582 30.116925zM324.406484 86.159312l174.404122 0 0 364.643907-88.593757-40.157605-85.809341 40.157605L324.407508 86.159312 324.406484 86.159312zM897.684106 937.838641 186.55486 937.838641c-33.267685 0-60.235896-26.968212-60.235896-60.235896s26.968212-60.233849 60.235896-60.233849l711.129246 0L897.684106 937.838641 897.684106 937.838641zM897.684106 761.324462 186.55486 761.324462c-21.557992 0-41.97909 4.858658-60.235896 13.533224L126.318964 139.8c0-36.551474 19.854187-53.639664 50.944276-53.639664l93.796246 0L271.059486 517.243421c0 7.402597 3.64911 13.71435 10.06831 17.406438 6.417153 3.689019 13.706163 3.671623 20.10899-0.052189l97.943706-56.984852c6.335289-3.686972 13.532201-3.742231 19.924795-0.152473l103.146195 57.905828c6.40692 3.597945 13.627369 3.533476 19.973914-0.181125 6.340405-3.712555 9.93221-9.975189 9.93221-17.327644L552.157605 86.161359l345.525478 0 0 675.164127L897.684106 761.325485 897.684106 761.324462z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-youxipengyouzuju" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M958 697.7c-1.5-14.2-3.8-26.3-7.1-36.7-0.1-0.3-0.2-0.5-0.2-0.8-7.2-21.5-19.8-38.9-37.4-51.6-13.4-9.6-28.7-17.8-45.7-24.1-14.7-5.5-30-10.4-45.4-14.6-12.6-3.4-24.3-7.3-34.8-11.5-0.1 0-0.2-0.1-0.2-0.1-11.4-4.5-16.6-8.3-18.7-10.2-4.2-3.8-6.1-6.7-7-8.5-1.2-2.5-1.9-4.8-2-6.8-0.2-3.8 0-7.5 0.7-11.1 0.1-0.5 0.2-1.1 0.3-1.6 0.2-1.4 0.4-2.4 0.6-3.2 4.8-4.1 10.8-9 17.9-14.6 0.6-0.4 1.1-0.9 1.6-1.4 7.8-6.8 14.6-15.7 20.1-26.4 3.8-7.4 7.3-15.1 10.3-22.8 0.2-0.6 0.4-1.2 0.6-1.8 0.8-2.5 1.7-5.1 2.5-7.7 2.2-1.6 4.3-3.3 6.4-5.2 7.7-6.8 14.5-15.7 20-26.3 5.6-10.9 9.1-23.7 10.7-39.1 1.5-12.5 1.1-23.5-1.2-33.5-2-9-4.9-16.8-8.6-23.6-1-1.9-2.1-3.8-3.2-5.6-0.5-16.1-1.7-32.1-3.7-47.9 0-0.2-0.1-0.5-0.1-0.7-2.7-19.1-7.4-39.2-13.8-59.8-7.3-23.5-19.1-45.4-34.8-64.9-7.8-9.9-17.8-19.1-30.4-28.2-11.7-8.4-25.1-16-39.8-22.5-14.5-6.4-30-11.5-46.3-15.2C652.5 66 635.6 64 618.7 64c-0.2 0-0.3 0-0.5 0-13 0-26.6 1-40.3 3-15.2 2.2-30.5 6.4-45.4 12.5-15.1 6.1-29.9 14.6-44 25.1-14.9 11.1-28.4 25.4-40.1 42.6-1.5 2.1-3 4.3-4.4 6.5-14.6-2.9-29.5-4.4-44.4-4.5-0.2 0-0.3 0-0.5 0-13 0-26.6 1-40.3 3-15.2 2.2-30.5 6.4-45.4 12.5-15.1 6.2-29.9 14.6-44 25.1-14.9 11.1-28.4 25.4-40.1 42.6-12.8 17.8-22.5 38.2-28.8 60.5-5.6 19.8-9.6 38.7-11.8 56.1-2 15.6-3.2 31.3-3.3 47-2.6 4.4-4.8 8.9-6.5 13.6-3.3 8.3-5.4 17.5-6.5 27.9-1.4 12.7 0.3 26.1 5 39.9 3.9 13 9 23.4 15.5 31.8 5.3 6.8 10.4 12.3 15.7 16.6 0.6 0.5 1.2 1 1.9 1.5 0.8 2.6 1.7 5.2 2.5 7.8 0.2 0.6 0.4 1.2 0.6 1.8 2.8 7.3 5.9 14.6 9.3 21.6 5.4 11.2 12.2 20.5 20.4 27.6 0.3 0.3 0.6 0.5 1 0.8 6.8 5.6 13.1 11.2 18.7 16.5 0 0.2 0.1 0.4 0.1 0.6 0.4 6.6 0.6 12.5 0.6 17.7 0 0.7-0.1 1.3-0.4 1.9-0.1 0.2-0.9 2-3.8 5.1-1.2 1.3-5 5-14.3 10.8-0.1 0.1-0.2 0.1-0.3 0.2-9.3 5.8-20.4 10.4-32.9 13.7-18 4.6-35.6 10-52.4 15.9-20 7.1-38 16.9-53.4 29.2-20.2 16.1-32.9 39.5-36.8 67.8-5.4 35.6-6.5 64.5-3.3 88.5 3.2 24 8.6 48.1 26.3 62.5 8.7 7.1 19.9 11.7 38.7 15.8 11.9 2.6 26.4 5.2 43.2 7.7 16.4 2.5 34.9 4.9 54.9 7.1 19.8 2.2 40 4.2 60.1 5.9 20.2 1.7 40 3.3 59 4.3 19.2 1 36.4 1.8 51 1.8 0 0 0 0 0 0 14.6 0 32-0.8 51.7-1.8 19.4-1 39.9-2.5 61-4.2 21.2-1.7 42.5-3.9 63.4-6.4 21.4-2.5 41.1-5.5 58.6-8.8 18.2-3.4 33.4-7 46.2-10.8 15.3-4.5 32.3-11.2 42.9-26 0.4-0.6 0.9-1.2 1.3-1.9 5.5-8.7 9.6-19.2 12.3-31.9 19.4-1.6 38.8-3.6 57.9-5.8 21.4-2.5 41.1-5.5 58.6-8.8 18.2-3.4 33.4-7 46.2-10.8 15.3-4.5 32.3-11.2 42.9-26 0.4-0.6 0.9-1.2 1.3-1.9 6.5-10.2 11-22.9 13.6-38.9 2.1-12.4 3.1-25.7 3.1-39.5C960 723.5 959.3 710.4 958 697.7zM873.8 762.2c0 0.1 0 0.2 0 0.3-9.7 2.8-22 5.6-36.5 8.4-15.6 2.9-33.4 5.6-52.9 7.9-15.1 1.8-30.4 3.4-45.6 4.7 0-0.2 0-0.4-0.1-0.6-1.5-14.2-3.8-26.3-7.1-36.7-0.1-0.2-0.2-0.5-0.2-0.8-7.2-21.5-19.8-38.9-37.4-51.7-13.4-9.6-28.7-17.7-45.7-24.1-14.7-5.5-30-10.4-45.4-14.6-12.6-3.4-24.3-7.3-34.8-11.5-0.1 0-0.2-0.1-0.2-0.1-11.4-4.5-16.6-8.3-18.7-10.2-4.2-3.8-6.1-6.7-7-8.5-1.2-2.5-1.9-4.8-2-6.8-0.2-3.8 0-7.5 0.7-11.1 0.1-0.5 0.2-1.1 0.3-1.6 0.2-1.4 0.4-2.4 0.6-3.2 4.8-4.1 10.8-9 17.9-14.6 0.6-0.4 1.1-0.9 1.6-1.4 7.8-6.8 14.6-15.7 20.1-26.4 3.8-7.4 7.3-15.1 10.3-22.8 0.2-0.6 0.4-1.2 0.6-1.8 0.8-2.5 1.7-5.1 2.5-7.7 2.2-1.6 4.3-3.3 6.4-5.2 7.7-6.8 14.4-15.6 20-26.2 5.6-10.9 9.1-23.7 10.7-39.1 1.5-12.5 1.1-23.4-1.2-33.5-2-9-4.9-16.8-8.6-23.6-1-1.9-2.1-3.8-3.2-5.6-0.5-16.1-1.7-32.1-3.7-47.9 0-0.2-0.1-0.5-0.1-0.7-2.7-19.1-7.4-39.2-13.8-59.8-7.3-23.5-19-45.4-34.8-64.9-7.8-9.9-17.8-19.1-30.4-28.2-3.5-2.6-7.3-5-11.1-7.4 4.4-5.1 8.9-9.5 13.7-13.1 8.4-6.3 17-11.2 25.5-14.7 8.6-3.5 17.2-5.9 25.5-7.1 9.7-1.4 19.1-2.1 28-2.1 0.1 0 0.3 0 0.4 0 10.8 0 21.6 1.2 32.3 3.7 11.1 2.5 21.6 6 31.1 10.2 9.3 4.1 17.6 8.7 24.6 13.8 7.7 5.5 11.6 9.6 13.5 12.1 0.1 0.2 0.3 0.4 0.4 0.5 9.2 11.4 15.8 23.5 20 37.1 5.1 16.2 8.7 31.8 10.8 46.3 2.2 17.4 3.2 35.2 3.2 53.1 0 11.8 5 23 13.5 30.9 0 0.2 0.1 0.4 0.1 0.6 0 0.4 0.1 2.1-0.3 5.3-0.1 0.4-0.1 0.8-0.1 1.2-0.6 6-1.5 8.6-1.7 9-0.4 0.8-0.8 1.4-1 1.7-12.6 4.5-22.4 14.8-26.2 27.8-2.2 7.3-4.3 14.3-6.5 20.8-1.8 4.5-3.8 9-6.1 13.3-0.5 1-0.9 1.7-1.2 2-8.9 7.1-16.2 13.1-22.1 18.3-13.2 11.6-21.7 28.4-25.3 50-2 10.6-2.7 21.4-2 32.3 0.8 12.9 4.3 25.7 10.3 38.1 6 12.4 14.8 23.9 26.3 34.3 11.4 10.3 25.8 18.8 44.2 26 13.5 5.4 28.3 10.3 44 14.5 12.9 3.5 25.6 7.6 37.9 12.2 10 3.7 18.7 8.3 26 13.6 2.1 1.5 4.7 3.9 6.6 9.6 1.1 3.6 2.5 9.9 3.6 20.1 1 9.8 1.6 19.9 1.6 30C875.8 745.8 875.1 754.4 873.8 762.2z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-beijing" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M360.933133 531.939959c-69.825981 0-126.430902 56.604921-126.430902 126.430903s56.604921 126.430902 126.430902 126.430902 126.430902-56.604921 126.430903-126.430902v-126.430903h-126.430903z m0 231.792998c-58.185307 0-105.362095-47.167757-105.362095-105.362095 0-58.185307 47.167757-105.362095 105.362095-105.362096h105.362096v105.362096c0 58.185307-47.176788 105.362095-105.362096 105.362095zM655.941582 236.931511c-69.825981 0-126.430902 56.604921-126.430902 126.430902v126.439933h126.421871c69.825981 0 126.430902-56.604921 126.430903-126.430902s-56.59589-126.439933-126.421872-126.439933z m0 231.792997H550.579487V363.362413c0-58.185307 47.167757-105.362095 105.362095-105.362096S761.294647 305.177106 761.294647 363.362413s-47.167757 105.362095-105.353065 105.362095zM360.933133 236.931511c-69.825981 0-126.430902 56.604921-126.430902 126.430902s56.604921 126.430902 126.430902 126.430902h126.430903v-126.430902c0-69.825981-56.604921-126.430902-126.430903-126.430902z m105.362096 231.792997H360.933133c-58.185307 0-105.362095-47.167757-105.362095-105.362095S302.747826 258.009348 360.933133 258.009348s105.362095 47.167757 105.362096 105.362096v105.353064z" fill="" ></path>' +
    '' +
    '<path d="M508.432842 26.216351C240.769592 26.216351 23.787071 243.198871 23.787071 510.871153s216.982521 484.654802 484.654802 484.654802 484.654802-216.982521 484.654802-484.654802S776.105124 26.216351 508.432842 26.216351z m0 948.231766c-256.031608 0-463.576964-207.554388-463.576964-463.576964C44.855878 254.839545 252.410265 47.285157 508.432842 47.285157c256.031608 0 463.576964 207.554388 463.576965 463.576965 0.009031 256.031608-207.545357 463.585995-463.576965 463.585995z" fill="" ></path>' +
    '' +
    '<path d="M655.941582 531.939959H529.501649v126.430903c0 69.825981 56.604921 126.430902 126.430902 126.430902s126.430902-56.604921 126.430903-126.430902c0.009031-69.825981-56.59589-126.430902-126.421872-126.430903z m0 231.792998c-58.185307 0-105.362095-47.167757-105.362095-105.362095V553.008766h105.362095c58.185307 0 105.362095 47.167757 105.362096 105.362096-0.009031 58.185307-47.176788 105.362095-105.362096 105.362095z" fill="" ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)